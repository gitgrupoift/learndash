@model LearnDash.Dal.LearningFlow

<div class="roundabout">
    <ul>
        <li class="flow-name"><span>@Model.Name</span></li>
        @foreach(var task in Model.Tasks)
        {
            var flowClass = "flow-task";
            
            if (task.IsNext)
            {
                flowClass += " flow-next";
            }
            <li class="@flowClass"><span>@task.Name</span></li>
            
        }
    </ul>
</div>
<div class="flow-menu">
    <input id="txtBoxTaskName" type="text" />
    <button id="btnAddTask">
        Add Task</button>
    <button id="btnRemoveTask">
        Delete Task</button>
    <button id="btnComplete">
        Complete</button>
    <button id="btnSaveFlow">
        SaveFlow</button>
</div>
<script>
    var currentNextChild = 0;

    function CreateTask(taskData)
    {
        var flowTaskName = taskData.find("span").html();
        var isNext = taskData.hasClass("flow-next");
        var task =
            {
                Name : flowTaskName,
                IsNext : isNext
            };
        return task;
    }


    $(document).ready(function () {

        $("#btnSaveFlow").click(function () {

            var flowId = '@Model.Id';
            var flowName = $(".flow-name span").html();
            var flowTasks = new Array();

            $(".flow-task").each(function () {
                var newFlowTask = CreateTask($(this));
                flowTasks.push(newFlowTask);
            });

            var learningFlow = {
                Id    : flowId,
                Name  : flowName,
                Tasks : flowTasks
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Save", "LearningFlow")",
                data: JSON.stringify(learningFlow),
                dataType : "json",
                contentType : 'application/json',
                success: function (data) {
                    var jsonData = $.parseJSON(data);
                    if (jsonData.items.length <= 0) {
                    }
                }
            });



        });


        $("#btnAddTask").click(function () {
            var taskName = $("#txtBoxTaskName").val();
            var newElement = $("<li class='flow-task'><span>" + taskName + "</span></li>");
            $('.roundabout ul').append(newElement);
            $('.roundabout ul').roundabout("relayoutChildren");
        });

        $("#btnRemoveTask").click(function () {
            var index = $('.roundabout ul').roundabout("getChildInFocus");
            $('.roundabout ul li').eq(index + 1).remove();
            $('.roundabout ul').roundabout("relayoutChildren");

            if (index < currentNextChild) {
                currentNextChild--;
            }
            if (index == currentNextChild) {
                $('.roundabout ul li').eq(currentNextChild + 1).addClass("flow-next");
            }
        });

        $("#btnComplete").click(function () {
            $("#btnComplete").hide();
            currentNextChild++;
            if (currentNextChild >= $('.roundabout ul li').length - 1) {
                currentNextChild = 0;
                var current1 = $(".flow-next");
                var next1 = $(".flow-task").first();
                next1.addClass("flow-next");
                current1.removeClass("flow-next");
            }
            else {
                var current = $(".flow-next");
                var next = current.next();
                next.addClass("flow-next");
                current.removeClass("flow-next");
            }

            $('.roundabout ul').roundabout("animateToNextChild", function () {
                $("#btnComplete").show();
            });
        });

        initRoundAbout();
    });

    function initRoundAbout() {
        $('.roundabout ul').roundabout({
            tilt: 0,
            minScale: 0.1,
            minOpacity: 1,
            minZ: 100,
            maxZ: 6000,
            duration: 400,
            easing: 'easeOutQuad',
            enableDrag: true,
            dropEasing: 'easeOutBounce',
            childSelector: '.flow-task',
            dragFactor: 15,
            dropCallback: function () {
                $(this).roundabout("animateToChild", currentNextChild);
            }
        }, function () {
            $(this).fadeTo(500, 1);
        });
    }
    
</script>
<style>
    .flow-name
    {
        margin-top: -5%;
        background-color: #222;
        color: yellow;
        font-weight: bold;
        text-align: center;
        width: 300px;
        height: 70px;
        position: absolute;
        z-index: 260;
        margin-left: 35%;
        border-color: #222;
        opacity: 0.8;
        -moz-border-radius: 15px;
        border-radius: 15px;
    }
    
    .flow-next
    {
        background-color: lightgreen !important;
    }
    
    .flow-name span
    {
        line-height: 3;
        font-size: 22px;
    }
    
    div.roundabout
    {
        margin-top: 5%;
        margin-left: 50%;
        margin-right: 50%;
    }
    
    .flow-task
    {
        text-align: center;
    }
    
    .flow-task span
    {
        font-size: 25px;
        font-weight: bold;
        position: relative;
        top: 40%;
        color: navy;
    }
    
    .roundabout-holder
    {
        list-style: none;
        padding: 0;
        margin: 0;
        height: 20em;
        width: 80em;
        margin-left: -40em;
    }
    .roundabout-moveable-item
    {
        height: 10em;
        width: 15em;
        cursor: pointer;
        background-color: #eb7e2a;
        border: 2px solid black;
        -moz-border-radius: 15px;
        border-radius: 15px;
    }
    .roundabout-in-focus
    {
        cursor: auto;
    }
</style>
